#!/bin/sh
set -xe
#add credentials values to template of .boto file to enable access to google cloud storage
sed -i -- "s <gs_secret_access_key> $gs_secret_access_key g" git-assets/pcf-deployment-ci/pcf-terraform-gcp/gcp/boto.txt
sed -i -- "s <default_project_id> $default_project_id g" git-assets/pcf-deployment-ci/pcf-terraform-gcp/gcp/boto.txt
sed -i -- "s <gs_access_key_id> $gs_access_key_id g" git-assets/pcf-deployment-ci/pcf-terraform-gcp/gcp/boto.txt
cp git-assets/pcf-deployment-ci/pcf-terraform-gcp/gcp/boto.txt /root/.boto
#cat /root/.boto
#get gcloud credentials and terraform project variables from google cloud storage bucket
#gsutil ls gs://igortest123/teraform
gsutil cp gs://igortest123/teraform/* git-assets/pcf-deployment-ci/pcf-terraform-gcp/terraform
ls git-assets/pcf-deployment-ci/pcf-terraform-gcp/terraform
cd git-assets/pcf-deployment-ci/pcf-terraform-gcp/terraform
#terraform get
terraform init
export action="apply"
if [[ $action = "apply" ]]; then
        terraform apply
else
        terraform destroy -force
fi

rc=$?;
if [[ $rc != 0 ]]; then
        echo "error in apply terraform"
else
        echo "success in terraform"
fi
echo "copy status"
ls git-assets/pcf-deployment-ci/pcf-terraform-gcp/terraform
gsutil cp git-assets/pcf-deployment-ci/pcf-terraform-gcp/terraform/terraform.tfstate gs://pcf-ci-config/terraform/terraform.tfstate




